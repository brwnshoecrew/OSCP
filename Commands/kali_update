#!/bin/bash
source /root/Ops/Commands/colors.sh
clear
# progress bar function
echo -e "${BLUE}Kali Linux Update Script\n"
if ping -c 1 -W 20 8.8.8.8 1> /dev/null 2> /dev/null
then
	echo -e "${GREEN}Internet Up!\n"

	echo -e "${YELLOW}[+] Updating Kali. Please wait."
	apt-get update -y -v > /dev/null && apt-get upgrade -y -v > /dev/null && apt-get dist-upgrade -y -v > /dev/null
	echo -e "${GREEN}Kali is now up to date.\n"

	echo -e "${YELLOW}[+] Cleaning Kali. Please wait."
	apt-get autoclean -y -v > /dev/null && apt-get clean -y -v > /dev/null
	echo -e "${GREEN}Kali is now clean and updated.\n"
	
	echo -e "${YELLOW}[+] Clearing Local Ops Git. Please wait."
	cd /root
	rm -rf Ops
	echo -e "${GREEN}Local Ops Git Cleared.\n"	
	
	echo -e "${YELLOW}[+] Creating New Local Ops. Please wait."
	cd /root
	git clone https://github.com/neogeo56/Ops.git
	chmod 755 Ops -R
	echo -e "${GREEN}New Local Ops Created.\n"
	
	echo -e "${YELLOW}[+] Updating local PATH variable. Please wait."
	export PATH=$PATH:/root/Ops/Commands
	echo -e "${GREEN}Local PATH variable updated.\n"
	
	echo -e "${YELLOW}[+] Moving TMUX Config File. Please wait."
	cd /root
	cp /root/Ops/Tools/.tmux.conf .
	chmod 755 /root/.tmux.conf
	echo -e "${GREEN}TMUX Config File Moved.\n"
	
	echo -e "${YELLOW}[+] Updating AutoRecon. Please wait."
	cd /root/Ops/Tools
	rm -rf AutoRecon
	git clone https://github.com/Tib3rius/AutoRecon.git
	chmod 755 AutoRecon -R
	echo -e "${GREEN}AutoRecon Updated.\n"
	
	echo -e "${YELLOW}[+] Updating Droopescan. Please wait."
	cd /root/Ops/Tools
	rm -rf droopescan
	git clone https://github.com/droope/droopescan.git
	chmod 755 droopescan -R
	echo -e "${GREEN}Droopescan Updated.\n"

	echo -e "${YELLOW}[+] Updating LinEnum. Please wait."
	cd /root/Ops/Tools
	rm -rf LinEnum
	cd /root/Ops/Post_Exploit
	git clone https://github.com/rebootuser/LinEnum.git
	chmod 755 LinEnum -R
	echo -e "${GREEN}LinEnum Updated.\n"

	echo -e "${YELLOW}[+] Updating Linux-Smart-Enumeration. Please wait."
	cd /root/Ops/Tools
	rm -rf linux-smart-enumeration
	cd /root/Ops/Post_Exploit
	git clone https://github.com/diego-treitos/linux-smart-enumeration.git
	chmod 755 linux-smart-enumeration -R
	echo -e "${GREEN}Linux-Smart-Enumeration Updated.\n"

	echo -e "${YELLOW}[+] Updating Spose. Please wait."
	cd /root/Ops/Tools
	git clone https://github.com/aancw/spose.git
	chmod 755 spose -R
	echo -e "${GREEN}Spose Updated.\n"
	
	echo -e "${YELLOW}[+] Updating PowerUp. Please wait."
	cd /root/Ops/Tools
	wget https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Privesc/PowerUp.ps1
	chmod 755 PowerUp.ps1
	echo -e "${GREEN}PowerUp Updated.\n"
	
	echo -e "${YELLOW}[+] Updating Sherlock. Please wait."
	cd /root/Ops/Tools
	wget https://raw.githubusercontent.com/rasta-mouse/Sherlock/master/Sherlock.ps1
	chmod 755 Sherlock.ps1
	echo "" >> Sherlock.ps1
	echo "Find-AllVulns" >> Sherlock.ps1
	echo -e "${GREEN}Sherlock Updated.\n"
	
	echo -e "${YELLOW}[+] Updating Nishang Powershell TCP. Please wait."
	cd /root/Ops/Tools
	wget https://raw.githubusercontent.com/samratashok/nishang/master/Shells/Invoke-PowerShellTcp.ps1
	chmod 755 Invoke-PowerShellTcp.ps1
	echo -e "${GREEN}Nishang Powershell TCP Updated.\n"

	echo -e "${BLUE}Exiting.\n"
else
	echo -e "${RED}Internet Down...Exiting"
fi
exit
